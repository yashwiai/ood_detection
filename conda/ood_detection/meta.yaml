package:
  name: ood_detection
  version: 0.0.9
source:
  sha256: 4aaa66b7233e6787897b74395b96ec5ce9353faa4a1760b2adafa2f7f029d405
  url: https://files.pythonhosted.org/packages/2f/06/86e2d068de2d7248e533bb86fd97975e51d93fe8f1a0542dab4429d61af3/ood_detection-0.0.9.tar.gz
about:
  description: "OOD Detection\n================\n\n<!-- WARNING: THIS FILE WAS AUTOGENERATED!\
    \ DO NOT EDIT! -->\n\nThis library is used for OOD Detection where a model encounters\
    \ new\nclasses at test time that were not seen during training. The goal is to\n\
    detect that such inputs do not belong to any of the training classes.\n\n## Install\n\
    \n``` sh\npip install ood_detection\n```\n\nor\n\n``` sh\nconda install -c yashkhandelwal\
    \ ood_detection\n```\n\n## Example Usage\n\n``` python\nimport numpy as np\nfrom\
    \ sklearn.datasets import make_blobs\nfrom ood_detection.core import *\n```\n\n\
    ``` python\n# example dataset\nn_samples = 1000\nn_centers = 10\nn_features =\
    \ 1024\n\nx, y = make_blobs(n_samples=n_samples, n_features=n_features, centers=n_centers,\
    \ random_state=0)\n```\n\n``` python\n# using the last 5 cluster as the test and\
    \ rest as train\ntrain_embedding = x[np.where(y < (n_centers - 5))]\ntrain_labels\
    \ = y[np.where(y < (n_centers - 5))]\n\ntest_embedding = x[np.where(y >= (n_centers\
    \ - 5))]\ntest_labels = y[np.where(y >= (n_centers - 5))]\n```\n\n``` python\n\
    ood = OODMetric(train_embedding, train_labels)\n\nin_distribution_rmd = ood.compute_rmd(train_embedding)\n\
    ood_rmd = ood.compute_rmd(test_embedding)\n```\n\n``` python\nplt.hist([in_distribution_rmd,\
    \ ood_rmd], label=[\"In Distribution\", \"OOD\"])\nplt.legend()\nplt.show()\n\
    ```\n\n![](index_files/figure-gfm/cell-6-output-1.png)\n\n## Built using NBDev\n\
    \nThis OOD Detection library was built in a jupyter notebook with proper\ndocumentation\
    \ and test cases. These test cases are verified before they\nare published to\
    \ Github Pages, PyPi, Conda etc.\n\nI\u2019ve written down a [NBDev\nTutorial](https://yashwiai.github.io/ood_detection/tutorial.html)\n\
    explaining the thought process of Jeremy Howard and folks at FastAI\nbehind building\
    \ it. The tutorial covers about how to get started,\nimportant functions and description\
    \ of those I used with the issues I\nfaced while exploring the tool for the first\
    \ time.\n\n## Acknowledgements\n\nSpecial thanks to **[Yugam\nTiwari](https://www.linkedin.com/in/tiwari-yugam)**\
    \ for explaining the\ncode he has written for the OODMetric and helping me packaging\
    \ in the\nlibrary.\n\nThanks to **[Soma Dhavala](https://in.linkedin.com/in/somasdhavala)**\n\
    for coming up with the idea to prepare NBDev Tutorial and helping with\nthe initial\
    \ reading and exploration material.\n"
  dev_url: https://yashwiai.github.io
  doc_url: https://yashwiai.github.io
  home: https://yashwiai.github.io
  license: Apache Software
  license_family: APACHE
  summary: OOD Detection Library built using nbdev
build:
  noarch: python
  number: '0'
  script: '{{ PYTHON }} -m pip install . -vv'
extra:
  recipe-maintainers:
  - yashwiai
requirements:
  host:
  - pip
  - python
  - packaging
  - numpy
  - matplotlib
  - scikit-learn
  - tqdm
  run:
  - pip
  - python
  - packaging
  - numpy
  - matplotlib
  - scikit-learn
  - tqdm
test:
  imports:
  - ood_detection
