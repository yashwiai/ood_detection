package:
  name: ood_detection
  version: 0.0.8
source:
  sha256: 166aa19e6072dcaba9a3f14f76fe6dbc4059ace6e60325782688578b57c6425b
  url: https://files.pythonhosted.org/packages/e4/c4/769956971516317dc0fca100c2988ec5174a93e32ecf8b7786627df5e735/ood_detection-0.0.8.tar.gz
about:
  description: "OOD Detection\n================\n\n<!-- WARNING: THIS FILE WAS AUTOGENERATED!\
    \ DO NOT EDIT! -->\n\nThis library is used for OOD Detection where a model encounters\
    \ new\nclasses at test time that were not seen during training. The goal is to\n\
    detect that such inputs do not belong to any of the training classes.\n\n## Install\n\
    \n``` sh\npip install ood_detection\n```\n\n## Example Usage\n\n``` python\nimport\
    \ numpy as np\nfrom ood_detection.core import OODMetric # imports OODMetric class\
    \ and other utility functions\n```\n\n``` python\ntrain_embedding = np.random.standard_normal((32,\
    \ 2048))\ntrain_labels = np.random.randint(low=0, high=5, size=(32,))\n```\n\n\
    ``` python\nood = OODMetric(train_embedding, train_labels)\n```\n\n``` python\n\
    test_embedding = np.random.standard_normal((32, 2048)) # test embedding from same\
    \ distribution\nscores = ood.compute_rmd(test_embedding) # compute relative mahalanobis\
    \ distance\nprint(scores)\n```\n\n    [ 1.16065497e+13 -1.37269901e+13  3.54920865e+12\
    \  4.75570475e+12\n     -4.90615930e+12 -2.63622848e+12 -5.22489520e+11 -7.67105637e+12\n\
    \      1.30991140e+12 -5.38689280e+12  2.71026479e+12 -4.07842659e+13\n     -1.01482832e+13\
    \ -2.18136787e+13 -6.53841964e+12 -1.70525347e+13\n      1.06493867e+13 -2.04729993e+13\
    \  4.68809372e+12 -6.11747086e+12\n      1.09862330e+13  1.03001857e+13 -2.91312276e+13\
    \ -9.26086735e+12\n      7.23079505e+12  7.26673743e+12 -4.73734980e+13  3.17798849e+12\n\
    \      1.99687662e+13  2.99860166e+12  9.86244208e+11  8.76676896e+12]\n\n## Built\
    \ using NBDev\n\nThis OOD Detection library was built in a jupyter notebook with\
    \ proper\ndocumentation and test cases. These test cases are verified before they\n\
    are published to Github Pages, PyPi, Conda etc.\n\nI\u2019ve written down a [NBDev\n\
    Tutorial](https://yashwiai.github.io/ood_detection/tutorial.html)\nexplaining\
    \ the thought process of Jeremy Howard and folks at FastAI\nbehind building it.\
    \ The tutorial covers about what it can do and how it\nis an amazing tool with\
    \ support for building softwares following the\nbest coding principles.\n\n##\
    \ Acknowledgements\n\nSpecial thanks to **[Yugam\nTiwari](https://www.linkedin.com/in/tiwari-yugam)**\
    \ for explaining the\ncode he has written for the OODMetric and helping me packaging\
    \ in the\nlibrary.\n\nThanks to **[Soma Dhavala](https://in.linkedin.com/in/somasdhavala)**\n\
    for coming up with the idea to prepare NBDev Tutorial and helping with\nthe initial\
    \ reading and exploration material.\n"
  dev_url: https://yashkhandelwal.github.io
  doc_url: https://yashkhandelwal.github.io
  home: https://yashkhandelwal.github.io
  license: Apache Software
  license_family: APACHE
  summary: OOD Detection Library built using nbdev
build:
  noarch: python
  number: '0'
  script: '{{ PYTHON }} -m pip install . -vv'
extra:
  recipe-maintainers:
  - yashkhandelwal
requirements:
  host:
  - pip
  - python
  - packaging
  - numpy
  run:
  - pip
  - python
  - packaging
  - numpy
test:
  imports:
  - ood_detection
